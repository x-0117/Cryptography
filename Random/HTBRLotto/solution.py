#!/usr/bin/env python3

# Server takes the seed as int(time.time()) (the value will change every second)
# Server generates 5 unique values and returns them to the client.
# Server accepts 5 more values. If the 5 are the same as the next 5 values generated by the server, it returns the flag

# The seed is the current time rounded to the last second passed (Generated at the beginning of the program)
# If for a given seed all 5 values generated match, then  that's the right seed and rest of the values can be generated and returned to get the flag
# Try for the current time rounded to the last second passed.
# If fails try for the previous second. seed = seed - 1
# Considering the connection and communication didn't take more than 5 - 7 seconds. The right seed should be generated and verified in 5 tries
# The Next 5 values are returned and the flag is obtained


import time
import random
from pwn import *
context.log_level = 'critical'

# --------- Commented out portion is the question for the local machine ------

# extracted = []
# next_five = []

# # Initialize the (pseudo)random number generator
# seed = int(time.time())
# print("[+] Seed:", seed)
# random.seed(seed)

# # First extraction
# while len(extracted) < 5:
#     r = random.randint(1, 90)
#     if(r not in extracted):
#         extracted.append(r)
#         # time.sleep(1)
# print(extracted)
        
# # Next extraction
# solution = ""
# while len(next_five) < 5:
#     r = random.randint(1, 90)
#     if(r not in next_five):
#         next_five.append(r)
#         solution += str(r) + " "
# solution = solution.strip()
# print("\n[+] SOLUTION: " + solution)

# question = "\n\033[33m[?]\033[0m Guess the next extraction!!!"




# Solution
r = remote('138.68.189.179', 30233)

shit = r.recvuntil(b'numbers:')
i = len(shit) - 10
while shit[i:i + 10] != b'EXTRACTION':
    i -= 1
i += 12
j = i + 1
while shit[j] != 13:
    j += 1
j -= 1
extracted = [int(_) for _ in shit[i:j].decode().split()]
print(extracted)

seed = int(time.time())
ans = [1, 2, 3, 4, 5]
while ans != extracted:
    ans = []
    random.seed(seed)
    while len(ans) < 5:
        r1 = random.randint(1, 90)
        if(r1 not in ans):
            ans.append(r1)
    print(seed, ans)
    seed -= 1

response = ""
shit = []
while len(shit) < 5:
    r1 = random.randint(1, 90)
    if(r1 not in shit):
        shit.append(r1)
        response += str(r1) + " "
response = response.strip()
r.sendline(response.encode())
print(r.recvall())






# if str(response) == solution:
#     print("Good Job!\nHTB{f4k3_fl4g_f0r_t3st1ng}")
# else:
#     print("Nope! Try again.")
