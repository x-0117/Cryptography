# -*- coding: utf-8 -*-

# n1 = p1 * p2
# n2 = p2 * p3
# n3 = p3 * p4
# n4 = p4 * p5
# p2 = gcd(n1, n2)
# p1 = n1 // p2
# p3 = n2 // p2
# Similarly we find all the 5 primes.
# Once we have the primes, RSA is cracked!

from math import gcd
from Crypto.Util.number import long_to_bytes

n1=13909788494986813682399287352088368540568635097705669066527028400755514287704849772353695424074902334611285559933829374880086940180240553245017088207890863543962486795946577110206590103165089813562962499124231911983607544296562181601503826589783616355630168775258118189061036362457236674795993919226543962308842040734531535902955305440994214003195654256056474090635141072820005426381172135071896366876699297322830894119708128101142847094704079727519911438421426688837962962635210587802890774985564204865066899806559259254715425096721346583980283871068954132889040818917138306972228008104253966943648628992089120544137
n2=18060842479593590622986177016729489691361099192413645964272508740456321996061771178525636395921392408880871034800415274864349357156158251794298235265987567778165122135822845367615013759916593325862374948619125337099773225301001914882743604218398669213415775412836151453858393446543699058121773417790194566190069273392352258350066109415515108243287933878648916598252302039930069635856923780700217811167165594568747832056546557907096463595600071392951316374446670173686066542459607387299081795237577730689381266745475284343918240017421981420405234599742732607000243840472711171408691847913720398004291398736404982578729
n3=20529492205841395436564790919110432569998080684846693199564092829341323132303390953919859971162083962001592694065827305703975144138663640226717620073744674395144474580353372320987019685426562840946060189864069871321922561765184163334853392127062208036024312133241972343730158429061350253548587173235215739425951129220976553312147410517172913947051732126053398749214226810450789793339534908811386633149120713992125438042685706356609653287734731117856686893849901540851476360890061878030675257802495288799939264276815382199461297614299263136774866250920773018616952465339034233062981287789415680137917253485411638244201
n4=24692961801733469368310992607738306754239857038705119347194031600496449691361613768603092804307746275822135852253609168258974849279051865467971198621084630567709999694115912347063061176030013692740898581405779870443520592391636952614618029755274231458444866723737078853917965790331180349111217228037254537533807123676522803353813472233772950166381131786234178783645922687659497269242882629754590367012804500459947790871685159587414464265496209806974653345864566990845011379437607341256465665646041884148676389546856320627158208959783864176300908275227651604598261188162260756810335060786285415219464576705916196841439
flag=13445089877908820068940836421291719520181851875625863603467689248118085544813157409824266912910685150182770880805204452236773190887210347377292807438722677758541846635765413034452221133555584424382934713071935179538477684380846420640291064120873064253629931036987225956475134892922550484042568395554061211002858780991743526024425958901950566541698179189690364533205591562153043893566385223130736269604335472675235993732529166247563397072615770032219224733918418595903546608461049697450713948495939239229399422445874687590107844089381987196825676600598247063053285991236235257401038982653408019574163420689664463863308

p2 = gcd(n1, n2)
p1 = n1 // p2
p3 = n2 // p2
p4 = n3 // p3
p5 = n4 // p4

n = [n4, n3, n2, n1]
phi = [(p5 - 1) * (p4 - 1), (p4 - 1) * (p3 - 1), (p3 - 1) * (p2 - 1), (p2 - 1) * (p1 - 1)]
e = 65537

for i in range(4):
    n1 = n[i]
    phi1 = phi[i]
    d1 = pow(e, -1, phi1)
    flag = pow(flag, d1, n1)

print(long_to_bytes(flag))

# flag{common_modulus_attack_d4a92bc4ff}